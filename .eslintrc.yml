env:
  browser: true
  es2020: true
  node: true
parser: "@typescript-eslint/parser"
parserOptions:
  ecmaFeatures:
    jsx: true
  ecmaVersion: 2020
  sourceType: module
plugins:
  - react
  - "@typescript-eslint"
extends:
  - "eslint:recommended"
  - "plugin:react/recommended"
  - "plugin:@typescript-eslint/recommended"
  - "prettier" # Uses eslint-config-prettier to disable ESLint rules from @typescript-eslint/eslint-plugin that would conflict with prettier
  - "plugin:prettier/recommended" # Enables eslint-plugin-prettier and eslint-config-prettier. This will display prettier errors as ESLint errors. Make sure this is always the last configuration in the extends array.
rules:
  linebreak-style:
    - error
    - unix
  "@typescript-eslint/no-explicit-any": "off"
  "@typescript-eslint/no-inferrable-types": "off"
  "@typescript-eslint/no-unused-vars": "off"
  "@typescript-eslint/no-var-requires": "off"
  "@typescript-eslint/no-namespace": "off" # TEMPORARY: Affectes TableTypes_amazon01.ts
  "@typescript-eslint/ban-types": "off" # TEMPORARY: Causes error on use of `object` and others
  no-inner-declarations: "off" # Doesn't allow functions inside of blocks, but I don't see a good reason for that
  # "@typescript-eslint/await-thenable": "error"
  # "@typescript-eslint/no-floating-promises": 2
  no-extra-boolean-cast: "off" # I find `!!` to be a helpful clarification sometimes
  "prettier/prettier": 1 # warning instead of error
settings:
  react:
    version: detect
